(define sub1 (lambda (n) (- n 1)))

(define 1- (lambda (x) (sub1 x)))


(define *small* 1)
(define *big* 100)

(define (guess-my-number)
  (ash (+ *small* *big*) -1))

(define (smaller)
  (cond
    (set! *big* (- (guess-my-number) 1))
    (guess-my-number)))

(define (bigger)
  (cond
    (set! *small* (+ (guess-my-number) 1))
    (guess-my-number)))

(define start-over
  (cond
    (set! *small* 1)
    (set! *big* 100)
    (guess-my-number)))
